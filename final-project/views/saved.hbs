<h1 data-anijs="if: DOMContentLoaded, on: document, do: fadeInDown animated">Saved Locations</h1>

<table>
  <tr>
    <td>City Name</td>
    <td>Lat</td>
    <td>Long</td>
    <td>Forecast</td>
    <td>Temperature</td>
  </tr>
{{#each obj}}
  <tr>
    <td>{{name}}</td>
    <td>{{lat}}</td>
    <td>{{long}}</td>
    <td>{{forecast}}</td>
    <td>{{temp}}</td>
  </tr>
{{/each}}
</table>
<br>
<div class="center">
  <button type="button">Update!</button>
</div>
<br><br>

<h4>Want to add another?</h4>
<div id="map"></div>
<br><br>
<div class='formDivs'>
  <form method="POST" action="/saved">
    City Name: <input id="cityName" type="text" name="name" value="">
    <br><br>
    Latitude: <input id="pushLat" type="text" name="lat" value="">
    <br><br>
    Longitude: <input id="pushLong" type="text" name="lng" value="">
    <br><br>
    <input id="pushForecast" type="hidden" name="forecast" value="">
    <input id="pushTemp" type="hidden" name="temp" value="">
    <input type="submit" name="" value="Go!">
  </form>
</div>

<!-- grab background information from mongo; place here to allow front-end JS to grab -->
<div class='hidden'>
  <ul id="backgroundUl">
  {{#each back}}
    <li>{{name}},{{timeOfDay}},{{url}}</li>
  {{/each}}
  </ul>
</div>

<script>
  //adding a new city to the saved locations
  var map;
  var markers = [];
  var pushLat = 400;
  var pushLong = 400;
  var updateBtn = document.querySelector('button');
  updateBtn.addEventListener('click', updateForecast);

  //get interactive map; set default to US
  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 2,
      center: {lat: 38.631912, lng: -98.157859 }
    });
    var flag = 0;

    //use markers (1 per map); can drag
    map.addListener('click', function(e) {
      if (flag == 0) {
        var marker = new google.maps.Marker({
          position: e.latLng,
          draggable:true,
          map: map
        });
        markers.push(marker);
        flag = 1;
        pushLat = e.latLng.lat();
        document.getElementById("pushLat").value = Math.floor(pushLat);
        pushLong = e.latLng.lng();
        document.getElementById("pushLong").value = Math.floor(pushLong);
        getWeather(pushLat, pushLong);
      } else {
        for (var i = 0; i < markers.length; i++) {
          markers[i].setMap(null);
        }
        var marker = new google.maps.Marker({
          position: e.latLng,
          draggable:true,
          map: map
        });
        markers.push(marker);
        pushLat = e.latLng.lat();
        document.getElementById("pushLat").value = Math.floor(pushLat);
        pushLong = e.latLng.lng();
        document.getElementById("pushLong").value = Math.floor(pushLong);
        getWeather(pushLat, pushLong);
      }
    });
  }
  //connect with openweathermap, grab weather data
  function getWeather(lat, lng) {
    var url = 'http://api.openweathermap.org/data/2.5/forecast?lat=' + lat + '&lon=' + lng + '&APPID=b6c4be63fe138e605fa89d180e1fb46f&units=imperial';
    $.getJSON( url, function( data ) {
      document.getElementById("cityName").value = (JSON.stringify(data.city.name)).replace(/['"]+/g, '');
      document.getElementById("pushForecast").value = (JSON.stringify(data.list[0].weather[0].main)).replace(/['"]+/g, '');
      document.getElementById("pushTemp").value = (JSON.stringify(Math.floor(data.list[0].main.temp)));
    });
  }

  //update forecast since user saved the location/it entered the database
  function updateForecast() {
    var allTDs = document.querySelectorAll('td');
    var numOfPlaces = (allTDs.length)/5 - 1;

    var latCounter = 6;
    var longCounter = 7;
    var foreCounter = 8;
    var tempCounter = 9;
    for (var i = 0; i < numOfPlaces; i++) {
      var lat = allTDs[latCounter].innerHTML;
      var long = allTDs[longCounter].innerHTML;
      latCounter += 5;
      longCounter += 5;
      updateWeather(foreCounter, tempCounter, lat, long);
      foreCounter += 5;
      tempCounter += 5;
    }
  }

  //connect with openweathermaps again
  function updateWeather(foreCounter, tempCounter, lat, lng) {
    var url = 'http://api.openweathermap.org/data/2.5/forecast?lat=' + lat + '&lon=' + lng + '&APPID=b6c4be63fe138e605fa89d180e1fb46f&units=imperial';
    $.getJSON( url, function( data ) {
      document.querySelectorAll('td')[foreCounter].innerHTML = (JSON.stringify(data.list[0].weather[0].main)).replace(/['"]+/g, '');
      document.querySelectorAll('td')[tempCounter].innerHTML = (JSON.stringify(Math.floor(data.list[0].main.temp)));
    });
  }

  //change background randomly based on time of day
  var currentDate = new Date();
  var currentHour = currentDate.getHours();

  if (currentHour >= 6 && currentHour < 12) {
    var currentTimeOfDay = 'morning';
  } else if (currentHour >= 12 && currentHour < 20) {
    var currentTimeOfDay = 'morning';
  } else {
    var currentTimeOfDay = 'night';
  }

  var ulEle = document.getElementById('backgroundUl');
  var liEles = ulEle.getElementsByTagName('li');

  var liArr = [], relevantArr = [];
  for (var i = 0; i < liEles.length; i++) {
    liArr.push(liEles[i].innerHTML.split(','));
  }

  liArr.forEach(function(element, index) {
    if (element[1] == currentTimeOfDay) {
      relevantArr.push(element);
    }
  });

  var relevantCounter = 0;
  relevantArr.forEach(function(element, index) {
    relevantCounter += 1;
  });

  var randNum = Math.floor(Math.random() * relevantCounter);
  document.body.style.backgroundImage = "url(" + relevantArr[randNum][2] + ")";
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAhhbCHpCoYv2ekugMAzqjvmK9975-VVSs&callback=initMap"
async defer></script>
